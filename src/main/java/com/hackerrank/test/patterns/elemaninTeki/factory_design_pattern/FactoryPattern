What is the Factory Pattern?
- When a method returns one of several possible classes that share a common super class.
    * Create a new enemy in a game
    * Random number generator picks a number assigned to a specific enemy
    * The factory returns the enemy associated with that number
- The class is choosen at run time

When to use a Factory Pattern?
- When you do not know ahead of time what class object you need.
- When all of the potential classes are in the same subclass hierarchy
- To centralize class selection code
- When you do not want the user to have to know every subclass
- To encapsulate object creation.